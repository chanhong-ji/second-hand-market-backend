generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  phone     Int        @unique
  password  String
  avatar    String?
  ownerId   Int?
  onwer     User?      @relation("OwnerFollowing", fields: [ownerId], references: [id])
  following User[]     @relation("OwnerFollowing")
  posts     Post[]
  zones     Zone[]
  rooms     Room[]
  messages  Message[]
  interests Interest[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Post {
  id         Int      @id @default(autoincrement())
  caption    String
  dealt      Boolean  @default(false)
  user       User?    @relation(fields: [userId], references: [id])
  userId     Int?
  zone       Zone     @relation(fields: [zoneId], references: [id])
  zoneId     Int
  cateogory  Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Zone {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Interest {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id        Int       @id @default(autoincrement())
  users     User[]
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  payload   String
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  roomId    Int
}
